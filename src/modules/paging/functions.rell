function encode_cursor(page_cursor) = page_cursor.to_bytes().to_base64();

function decode_cursor(cursor: text) = page_cursor.from_bytes(byte_array.from_base64(cursor));

function fetch_data_size(page_size: integer? = 100) = min(100, page_size ?: 100) + 1;

function null_page() = paged_result(next_cursor = null, data = list<gtv>());

function make_page(pagination_results: list<pagination_result>, page_size: integer?): paged_result {
  if (page_size != null) {
    require(page_size > 0, "Must return at least one item");
  }
  if (empty(pagination_results)) {
    return null_page();
  }
  // adding +1 should help with next page null situation when current page size
  // is equal to max page size
  if (pagination_results.size() < fetch_data_size(page_size)) {
    return paged_result(
      next_cursor = null,
      data = pagination_results @* { } .data
    );
  }
  val paginated_result = pagination_results.sub(0, pagination_results.size() - 1);
  val next_id = pagination_results[pagination_results.size() - 2].rowid;
  val next_cursor = page_cursor(
    next_id
  );
  return paged_result(
    next_cursor = encode_cursor(next_cursor),
    data = paginated_result @* { } .data
  );
}
